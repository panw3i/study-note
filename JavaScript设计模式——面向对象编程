### 封装

通过`this`添加的属性、方法是在当前对象上添加的，然而`JavaScript`是一种基于原型`prototype`的语言，所以创建一个对象时（当然在`JavaScript`中函数也是一种对象），它都有一个原型`prototype`用于指向其继承对象的属性、方法。这样通过`prototype`继承的方法并不是对象自身的，所以在使用这些方法时，需要通过`prototype`一级一级查找得到。这样你会发现通过`this`定义属性或者方法时是该对象自身拥有的，所以我们每次通过类创建一个新对象时，`this`指向的属性和方法都会得到相应的创建，而通过`prototype`继承的属性和方法是每个对象通过`prototype`访问到，所以我们每次通过类创建一个新对象时这些属性和方法不好再次创建。
